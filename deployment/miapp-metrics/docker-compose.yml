#docker compose up -d
version: '3.3'
services:
  dbserver:
    image: postgres:17.5-alpine3.22
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: distribuida
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      #se crea la carpeta db-distribuida en el directorio c:
      - "c:/db-distribuida:/var/lib/postgresql/data"
    ports:
      - "54321:5432" # Exponer el puerto 5432 del contenedor en el puerto 54321 del host
    expose:
      - 5432 # Exponer el puerto 5432 dentro de la red del contenedor
#  postgres_exporter:
#    image: prometheuscommunity/postgres_exporter:latest
#    environment:
#      DATA_SOURCE_NAME: postgres://postgres:postgres@dbserver:5432/distribuida?sslmode=disable
#    ports:
#      - "9187:9187" # Exponer el puerto 9187 del contenedor en el puerto 9187 del host
#    expose:
#      - 9187 # Exponer el puerto 9187 dentro de la red del contenedor
#    depends_on:
#      - dbserver
  consul:
    image: consul:1.15.4
    command: |
      agent -dev
      -ui
      -bind 0.0.0.0
      -client 0.0.0.0
    ports:
      - "8500:8500" # Exponer el puerto 8500 del contenedor en el puerto 8500 del host
    expose:
      - 8500
  proxy:
    image: traefik:3.4.1
    command:
      --api.insecure=true
      --api.dashboard=true
      --providers.consulCatalog.refreshInterval=5s
      --providers.consulCatalog.exposedByDefault=false
      --providers.consulCatalog.endpoint.address=consul:8500
      
      --entryPoints.http.address=":80"
      --entryPoints.metrics.address=":8082"
      --metrics.prometheus=true
      --metrics.prometheus.entryPoint=metrics
    ports:
      - "8888:8080" #traefik dashboard
      - "8080:80" # Exponer el puerto 80 del contenedor en el puerto 80 del host
    expose:
      - 80
    depends_on:
      - consul
  authors:
    image: alhehita/app-authors:latest
    environment:
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: postgres
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://dbserver:5432/distribuida
      CONSUL_HTTP_PORT: 8080
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    ports:
      - "7070:8080" # Exponer el puerto 8080 del contenedor en el puerto 8080 del host
    depends_on:
      - dbserver
      - consul

  books:
    image: alhehita/app-books:latest
    environment:
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: postgres
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://dbserver:5432/distribuida
      CONSUL_HTTP_PORT: 8080
      CONSUL_HOST: consul
      CONSUL_PORT: 8500

  #  ports:
   #   - "9091:8080" # Exponer el puerto 9090 del contenedor en el puerto 9090 del host
    expose:
      - 8080 # Exponer el puerto 8080 dentro de la red del contenedor
    depends_on:
      - dbserver
      - consul
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - "./configs:/etc/prometheus"
    ports:
      - "9092:9090"# Exponer el puerto 9090 del contenedor en el puerto 9092 del host
    expose:
      - 9091 # Exponer el puerto 9090 dentro de la red del contenedor
  grafana:
    image: grafana/grafana-oss:latest
    ports:
      - "3000:3000" # Exponer el puerto 3000 del contenedor en el puerto 3000 del host
    expose:
      - 3000 # Exponer el puerto 3000 dentro de la red del contenedor


